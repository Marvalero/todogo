// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todogo.proto

package todogo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListTodosParams struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTodosParams) Reset()         { *m = ListTodosParams{} }
func (m *ListTodosParams) String() string { return proto.CompactTextString(m) }
func (*ListTodosParams) ProtoMessage()    {}
func (*ListTodosParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_todogo_0c1e2dccb189736f, []int{0}
}
func (m *ListTodosParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTodosParams.Unmarshal(m, b)
}
func (m *ListTodosParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTodosParams.Marshal(b, m, deterministic)
}
func (dst *ListTodosParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTodosParams.Merge(dst, src)
}
func (m *ListTodosParams) XXX_Size() int {
	return xxx_messageInfo_ListTodosParams.Size(m)
}
func (m *ListTodosParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTodosParams.DiscardUnknown(m)
}

var xxx_messageInfo_ListTodosParams proto.InternalMessageInfo

type Todo struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Todo) Reset()         { *m = Todo{} }
func (m *Todo) String() string { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()    {}
func (*Todo) Descriptor() ([]byte, []int) {
	return fileDescriptor_todogo_0c1e2dccb189736f, []int{1}
}
func (m *Todo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Todo.Unmarshal(m, b)
}
func (m *Todo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Todo.Marshal(b, m, deterministic)
}
func (dst *Todo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Todo.Merge(dst, src)
}
func (m *Todo) XXX_Size() int {
	return xxx_messageInfo_Todo.Size(m)
}
func (m *Todo) XXX_DiscardUnknown() {
	xxx_messageInfo_Todo.DiscardUnknown(m)
}

var xxx_messageInfo_Todo proto.InternalMessageInfo

func (m *Todo) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*ListTodosParams)(nil), "ListTodosParams")
	proto.RegisterType((*Todo)(nil), "Todo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoAppClient is the client API for TodoApp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoAppClient interface {
	ListTodos(ctx context.Context, in *ListTodosParams, opts ...grpc.CallOption) (TodoApp_ListTodosClient, error)
	CreateTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*Todo, error)
}

type todoAppClient struct {
	cc *grpc.ClientConn
}

func NewTodoAppClient(cc *grpc.ClientConn) TodoAppClient {
	return &todoAppClient{cc}
}

func (c *todoAppClient) ListTodos(ctx context.Context, in *ListTodosParams, opts ...grpc.CallOption) (TodoApp_ListTodosClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TodoApp_serviceDesc.Streams[0], "/TodoApp/ListTodos", opts...)
	if err != nil {
		return nil, err
	}
	x := &todoAppListTodosClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TodoApp_ListTodosClient interface {
	Recv() (*Todo, error)
	grpc.ClientStream
}

type todoAppListTodosClient struct {
	grpc.ClientStream
}

func (x *todoAppListTodosClient) Recv() (*Todo, error) {
	m := new(Todo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *todoAppClient) CreateTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*Todo, error) {
	out := new(Todo)
	err := c.cc.Invoke(ctx, "/TodoApp/CreateTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoAppServer is the server API for TodoApp service.
type TodoAppServer interface {
	ListTodos(*ListTodosParams, TodoApp_ListTodosServer) error
	CreateTodo(context.Context, *Todo) (*Todo, error)
}

func RegisterTodoAppServer(s *grpc.Server, srv TodoAppServer) {
	s.RegisterService(&_TodoApp_serviceDesc, srv)
}

func _TodoApp_ListTodos_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListTodosParams)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TodoAppServer).ListTodos(m, &todoAppListTodosServer{stream})
}

type TodoApp_ListTodosServer interface {
	Send(*Todo) error
	grpc.ServerStream
}

type todoAppListTodosServer struct {
	grpc.ServerStream
}

func (x *todoAppListTodosServer) Send(m *Todo) error {
	return x.ServerStream.SendMsg(m)
}

func _TodoApp_CreateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Todo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoAppServer).CreateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TodoApp/CreateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoAppServer).CreateTodo(ctx, req.(*Todo))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoApp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TodoApp",
	HandlerType: (*TodoAppServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTodo",
			Handler:    _TodoApp_CreateTodo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListTodos",
			Handler:       _TodoApp_ListTodos_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "todogo.proto",
}

func init() { proto.RegisterFile("todogo.proto", fileDescriptor_todogo_0c1e2dccb189736f) }

var fileDescriptor_todogo_0c1e2dccb189736f = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xc9, 0x4f, 0xc9,
	0x4f, 0xcf, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x12, 0xe4, 0xe2, 0xf7, 0xc9, 0x2c, 0x2e,
	0x09, 0xc9, 0x4f, 0xc9, 0x2f, 0x0e, 0x48, 0x2c, 0x4a, 0xcc, 0x2d, 0x56, 0x52, 0xe0, 0x62, 0x01,
	0x71, 0x85, 0x24, 0xb8, 0xd8, 0x93, 0xf3, 0xf3, 0x4a, 0x52, 0xf3, 0x4a, 0x24, 0x18, 0x15, 0x18,
	0x35, 0x38, 0x83, 0x60, 0x5c, 0xa3, 0x40, 0x2e, 0x76, 0x90, 0x0a, 0xc7, 0x82, 0x02, 0x21, 0x0d,
	0x2e, 0x4e, 0xb8, 0x7e, 0x21, 0x01, 0x3d, 0x34, 0xb3, 0xa4, 0x58, 0xf5, 0x40, 0x3c, 0x25, 0x06,
	0x03, 0x46, 0x21, 0x19, 0x2e, 0x2e, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0x54, 0xb0, 0xe1, 0x10, 0x09,
	0xb8, 0x7c, 0x12, 0x1b, 0xd8, 0x39, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x8d, 0xd0,
	0x32, 0x9e, 0x00, 0x00, 0x00,
}
